//Actor VacuumSSG : VacuumBullet
//{
//	SeeSound None
//	Speed 1
//	States
//	{
//	Spawn:
//		APLS ABABABABAB 1 Bright A_RadiusThrust(-5000,200,RTF_NOIMPACTDAMAGE, 2000)
//		Goto Death
//	Death:
//		APLS A 0
//		Stop
//	}	
//}
//ACTOR TestImp : DoomImp2
//{
//	Spawn:
//		TROO A 1 NoDelay A
// }
//ACTOR SpecialBaronOfHell : BaronOfHell
//{
  //States
  //{
  //Spawn:
	//BOSS A 0 NoDelay A_CustomMissile("OrbitBall", 32, 0, 0, CMF_AIMDIRECTION)
	// BOSS A 0 NoDelay A_CustomMissile("OrbitBall", 32, 0, 0, CMF_AIMDIRECTION)
  //Idle:
  //  Goto Super::Spawn
 // }
//}
//ACTOR OrbitBall
//{
//  RenderStyle "Add"
//  Translation "0:255=%[0,0,0]:[0.93,2,0.87]" // Makes it green-colored
//  +MISSILE
//  +NOINTERACTION

//  var int user_angle; // See user variables

//  States
//  {
//  Spawn:
//    BAL1 A 1 Bright NoDelay A_Warp(AAPTR_TARGET, 32, 0, 32, user_angle, WARPF_ABSOLUTEANGLE|WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE)
//    TNT1 A 0 A_SetUserVar("user_angle", user_angle + 16)
//	BAL1 A 0 A_CheckFlag("SOLID","Spawn",AAPTR_TARGET)
 //   Goto Death
//  Death:
//	BAL1 A 1 A_Remove(AAPTR_DEFAULT)
//	Stop
 // }
//}
//ACTOR BoomElemental : PainElemental
//{
//	Translation "144:151=175:182", "128:143=175:182", "48:79=175:182"
//	States
//	{
//	Missile:
//		PAIN D 5 A_FaceTarget
//		PAIN E 5 A_FaceTarget
//		PAIN F 4 Bright A_FaceTarget
//		PAIN F 1 Bright A_PainAttack("BoomSoul")
//		Goto See
//	Death:
//		PAIN H 8 Bright
//		PAIN I 8 Bright A_Scream
//		PAIN JK 8 Bright
//		PAIN L 8 Bright A_PainDie("BoomSoul")
//		PAIN M 8 Bright
//		Stop
//	}
//}
//ACTOR BoomSoul
//{
//  Health 100
//  Radius 16
//  Height 56
//  Mass 50
//  Speed 8
//  Damage 0
//  PainChance 256
//  RenderStyle Stencil
//  StencilColor Red
//  Alpha 0.9
//  Monster
//  +FLOAT
//  +NOGRAVITY
//  +MISSILEMORE
//  +DONTFALL
//  +NOICEDEATH
//  +NODAMAGETHRUST
//  AttackSound "skull/melee"
//  PainSound "skull/pain"
//  DeathSound "skull/death"
//  ActiveSound "skull/active"
//  Obituary "%o was gibbed by a boom soul."
//  States
//  {
//  Spawn:
//    SKUL AB 10 Bright A_Look
//    Loop
//  See:
//    SKUL AB 6 Bright A_Chase
//    Loop
//  Missile:
//    SKUL C 10 Bright A_FaceTarget
//    SKUL D 4 Bright A_SkullAttack
//    SKUL CD 4 Bright
//    Goto Missile+2
//  Melee:
//	SKUL A 0 A_Explode
//	Goto Death
//  Pain:
//    SKUL E 3 Bright
//    SKUL E 3 Bright A_Pain
//    Goto See
//  Death:
//    SKUL F 6 Bright
//    SKUL G 6 Bright A_Scream
//    SKUL H 6 Bright
//    SKUL I 6 Bright A_NoBlocking
//    SKUL J 6
//    SKUL K 6
//    Stop
//  }
//}
// ACTOR NewMegasphere : CustomInventory replaces Megasphere
// {
//  +COUNTITEM
//  +INVENTORY.ALWAYSPICKUP
//  Inventory.PickupMessage "$GOTMSPHERE" // "MegaSphere!"
//  Inventory.PickupSound "misc/p_pkup"
//  States
//  {
//  Spawn:
//    MEGA ABCD 6 Bright
//    Loop
//  Pickup:
//    TNT1 A 0 A_GiveInventory("BlueArmorForMegasphere", 1)
//    TNT1 A 0 HealThing(200,0)
//    Stop
//  }
// }
//ACTOR NewSphere : CustomInventory replaces Soulsphere
//{
//  +COUNTITEM
//  Inventory.PickupMessage "$GOTSUPER" // "Supercharge!"
//  Inventory.PickupSound "misc/p_pkup"
//  States
//  {
//	Spawn:
//		SOUL ABCDCB 6 Bright
//		Loop
//	Pickup:
//		TNT1 A 0 HealThing(100,0)
//		Stop
//  }
//}

// RAILGUN WITH TRAIL EXAMPLE: 
TRAIL = A_RailAttack(0,6,0,None,Orange,RGF_SILENT|RGF_FULLBRIGHT|RGF_NOPIERCING,0,None,0,0,0,0,2,0.0,"RingBulletTrail",-2)
ACTUAL ATTACK = A_RailAttack(30+random(0,120),0,10,None,None,RGF_SILENT|RGF_FULLBRIGHT|RGF_NOPIERCING,0,"InfernoRail",0,0,0,8,2.0,1.0)