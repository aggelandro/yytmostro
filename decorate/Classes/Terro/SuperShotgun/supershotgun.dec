ACTOR PkDoubleShotguns : WeaponWithSubWeaponOption
{
	+WEAPON.AMMO_CHECKBOTH
	Weapon.AmmoUse2 1
	Weapon.AmmoUse 1
	Weapon.AmmoGive 4
	Weapon.AmmoType "Shell"
	Weapon.AmmoType2 "Shell"
	Weapon.SelectionOrder 50
	Inventory.Pickupmessage "You plucked a pair of serious sawed-offs!"
	Obituary "%o was smashed into piles of putrid debris by %k's sawed-offs."
	Decal "BulletChip"
	AttackSound "terro/ssgshot"
	DamageType Friendly
	States
	{
	Spawn:
		SGN2 C -1
		Stop
		
	Deselect:
		SGDL A 0 A_TakeInventory("SynthFireActive",1)
		SGDL A 0 A_TakeInventory("SynthFireLeft",1)
		SGDL A 0 A_TakeInventory("SynthFireRight",1)
		Goto DS
		
	DS:
		SGDL A 1 A_Lower
		Loop
		
	Select:
		TNT1 A 0 A_TakeInventory("ClassThroweableAction", 1)
		TNT1 A 0 A_TakeInventory("SlideKickAction", 1)
		SGDL A 1 A_Raise
		SGDL A 0 A_GunFlash
		SGDL A 1 A_Raise
		Goto Select+3
		
	SuperSelect:
		TNT1 A 0 A_TakeInventory("ClassThroweableAction", 1)
		TNT1 A 0 A_TakeInventory("SlideKickAction", 1)
		SGDL E 1 A_Raise
		SGDL E 0 A_Raise
		Loop
		
	Ready:
		SGDL A 1
		SGDL A 0 A_GiveInventory("SynthFireActive",1)
		SGDL A 0 ACS_ExecuteAlways(891,0,0,0,0) //act.synth-fire LEFT(pri)
		SGDL A 0 ACS_ExecuteAlways(892,0,0,0,0) //act.synth-fire RIGHT(sec)
		Goto LIdle
		
	// Left Shotgun
	LIdle:
		SGDL A 0 A_JumpIfInventory("ClassThroweableAction", 1, "SubWeaponCheck")
		TNT1 A 0 A_JumpIfInventory("SlideKickAction", 1, "SlideKick")
		SGDL A 1 A_WeaponReady(WRF_ALLOWRELOAD|12)
		SGDL A 0 A_JumpIfInventory("SynthFireLeft",1,"LFire")
		SGDL A 0 A_JumpIfInventory("IsLReloading",1,"LReload")
		Loop
		
	LFire:
		SGDL A 0 A_JumpIfInventory("IsRReloading",1,"LIdle")
    SGDL A 0 A_JumpIfInventory("ClipDoubleLeft",1,1)
		Goto LDryFire
    SGDL C 0 A_AlertMonsters
		SGDL C 0 A_TakeInventory("ClipDoubleLeft",1,1)
		TNT1 A 0 A_FireCustomMissile("TerrorSSGTracer", random(-6,6), 1, -10, -2, 0, random(-3,3))
		TNT1 AAAAAA 0 A_FireCustomMissile("TerrorSSGTracer", random(-6,6), 0, -10, -2, 0, random(-3,3))
		TNT1 A 0 A_PlaySound("terro/ssgshot", CHAN_AUTO)
		SGDL BC 2 BRIGHT
		SGDL D 2
		SGDL EFA 2
		SGDL A 0 A_JumpIfInventory("SynthFireLeft",1,"LFire")
		Goto LIdle
		
	LReload:
		TNT1 A 0 A_GiveInventory("IsLReloading",1)
		SGRL A 0 A_JumpIfInventory("ClipDoubleLeft",2,2)
		SGRL A 0 A_JumpIfInventory("Shell",1,2)
		TNT1 A 0 A_TakeInventory("IsLReloading",1)
		Goto LIdle
		SGRL ABCD 2
		SGRL E 2 A_PlaySound("weapons/sshoto")
		SGRL FG 2
		SGRL H 12
		SGRL I 2
		SGRL J 2 A_PlaySound("terro/ssgreload")
		SGRL K 2
		TNT1 A 0 A_TakeInventory("IsLReloading",1)
		Goto LRStart
		
	LRStart:
		TNT1 A 0 A_JumpIfInventory("ClipDoubleLeft",0,"LREnd")
		TNT1 A 0 A_JumpIfInventory("Shell",1,1)
		Goto LREnd
		TNT1 A 0 A_GiveInventory("ClipDoubleLeft",1)
		Loop
		
	LREnd:
		SGRL L 2
		SGRL M 2 A_PlaySound("weapons/sshotc")
		SGDL EF 2
		SGDL A 4
		Goto LIdle
		
	LDryFire:
		SGDL A 6 A_PlaySound("weapons/sshoto")
		Goto LIdle
		
	// Right Shotgun
	Flash:
		SGDR A 8
		
	RIdle:
		SGDR A 1
		SGDR A 0 A_JumpIfInventory("SynthFireRight",1,"RFire")
		SGDR A 0 A_JumpIfInventory("IsRReloading",1,"RReload")
		Loop
		
	RReload:
		TNT1 A 0 A_GiveInventory("IsRReloading",1)
		SGDR A 0 A_JumpIfInventory("ClipDoubleRight",2,2)
		SGDR A 0 A_JumpIfInventory("Shell",1,2)
		TNT1 A 0 A_TakeInventory("IsRReloading",1)
		Goto RIdle
		SGRR ABCD 2
		SGRR E 2 A_PlaySound("weapons/sshoto")
		SGRR FG 2
		SGRR H 12
		SGRR I 2
		SGRR J 2 A_PlaySound("terro/ssgreload")
		SGRR K 2
		TNT1 A 0 A_TakeInventory("IsRReloading",1)
		Goto RRStart
		
	RRStart:
		TNT1 A 0 A_JumpIfInventory("ClipDoubleRight",0,"RREnd")
		TNT1 A 0 A_JumpIfInventory("Shell",1,1)
		Goto RREnd
		TNT1 A 0 A_GiveInventory("ClipDoubleRight",1)
		goto RRStart

	RREnd:
		SGRR L 2
		SGRR M 2 A_PlaySound("weapons/sshotc")
		SGDR EF 2
		SGDR A 4
		Goto RIdle
		
	RDryFire:
		SGDR A 6 A_PlaySound("weapons/sshoto")
		Goto RIdle
		
	RFire:
		SGDL A 0 A_JumpIfInventory("IsLReloading",1,"RIdle")
    SGDR A 0 A_JumpIfInventory("ClipDoubleRight",1,1)
		Goto RDryFire
    SGDR C 0 A_AlertMonsters
		SGDR C 0 A_TakeInventory("ClipDoubleRight",1,1)
		TNT1 A 0 A_FireCustomMissile("TerrorSSGTracer", random(-6,6), 1, 10, -2, 0, random(-3,3))
		TNT1 AAAAAA 0 A_FireCustomMissile("TerrorSSGTracer", random(-6,6), 0, 10, -2, 0, random(-3,3))
		TNT1 A 0 A_PlaySound("terro/ssgshot", CHAN_AUTO)
		SGDR BC 2 BRIGHT
		SGDR D 2
		SGDR EFA 2
		SGDR A 0 A_JumpIfInventory("SynthFireRight",1,"RFire")
		Goto RIdle
		
	Reload:
		TNT1 A 0 A_JumpIf(CallACS("clipDoubleLeft") <= 1, "EnableLReload")
		TNT1 A 0 A_JumpIf(CallACS("clipDoubleRight") <= 1, "EnableRReload")
		Goto LIdle
		
	EnableLReload:
		TNT1 A 0 A_GiveInventory("IsLReloading",1)
		Goto Reload+1
		
	EnableRReload:
		TNT1 A 0 A_GiveInventory("IsRReloading",1)
		Goto LIdle
		
	Fire:
		TNT1 A 0
		Goto Ready
		
	AltFire:
		Stop
	}
}
ACTOR ClipDoubleLeft  : Ammo { Inventory.MaxAmount 2 +IGNORESKILL }
ACTOR ClipDoubleRight : Ammo { Inventory.MaxAmount 2 +IGNORESKILL }
ACTOR GenericItem : Inventory
{
   - INVBAR
   + UNDROPPABLE
   Inventory.MaxAmount 1
   Inventory.Icon TNT1A0
}
ACTOR SynthFireActive : GenericItem {} // enables synthetic-fire system.
ACTOR SynthFireLeft   : GenericItem {} // special refire-trackers for
ACTOR SynthFireRight  : GenericItem {} // synthetic-fire dual-wielding.
ACTOR IsLReloading : Inventory
{
   Inventory.Amount 1
   Inventory.MaxAmount 1
   -INVBAR
}
ACTOR IsRReloading : Inventory
{
   Inventory.Amount 1
   Inventory.MaxAmount 1
   -INVBAR
}
