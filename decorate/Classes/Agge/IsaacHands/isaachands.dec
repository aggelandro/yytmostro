ACTOR IsaacHands : Weapon {	
	Inventory.PickupSound "misc/w_pkup"
	Inventory.PickupMessage "You got the isaac hands!"
	Obituary "%o was PUIJed by %k's isaac hands."
	Weapon.AmmoGive 100
	Weapon.AmmoUse 1
	Weapon.AmmoType "Clip"

	States {
	 
		Spawn:
		  MGUN A -1
		  Stop

		Ready:
		  TNT1 A 0 ACS_NamedExecuteWithResult("showPowerups", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("setIsaacHandsSelected", 1)
			TNT1 A -1 A_Jump(256, "ReadyLoop")
		  Wait

		ReadyLoop:
			TNT1 A 0 A_JumpIfInventory("MonstrosLungGiver", 1, "MLReadyLoop")
		  CFLM AAAABBBBCCCC 1 A_WeaponReady
		  Loop
			
		MLReadyLoop:
			CFLR AAAABBBBCCCC 1 A_WeaponReady
		  Loop			

		Deselect:
		  TNT1 A 0 ACS_NamedExecuteWithResult("showPowerups", 0)
			TNT1 A 0 ACS_NamedExecuteWithResult("setIsaacHandsSelected", 0)
			TNT1 A -1 A_Jump(256, "DeselectLoop")
		  Wait

		DeselectLoop:
			TNT1 A 0 A_JumpIfInventory("MonstrosLungGiver", 1, 2)
		  CFLM A 1 A_Lower
		  Loop
			CFLR A 1 A_Lower
		  Loop

		Select:
			TNT1 A 0 A_JumpIfInventory("MonstrosLungGiver", 1, 2)
		  CFLM A 1 A_Raise
		  Loop
			CFLR A 1 A_Raise
		  Loop

		Fire:
			TNT1 A 0 A_JumpIfInventory("MonstrosLungGiver", 1, "MLFire")
			CFLM A 1 Offset (0, 40)
			CFLM D 2 Offset (0, 50)
			CFLM D 2 Offset (0, 36)
			CFLM E 4 Bright
			TNT1 A 0 A_JumpIfInventory("RubberCementGiver", 1, "FireBouncingShot")
			Goto FireShot
			
		MLFire:
			TNT1 A 0 A_Refire("MLHold")
			TNT1 A -1 A_Jump(256, "ReadyLoop")
		  Wait
			
		MLHold:
			CFLR A 1 Offset (0, 40)
			CFLR D 2 Offset (0, 50)
			TNT1 A 0 ACS_NamedExecuteWithResult("loadChargedAttack", ACS_NamedExecuteWithResult("getChargedAttackTime"))
			Goto MLLoop
			
		MLLoop:
			CFLR D 1 Offset (0, 36)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("getChargeState") == 2, "ReadyLoop")
			TNT1 A 0 A_JumpIfInventory("RubberCementGiver", 1, 2)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("getChargeState") == 1, "FireCharged")
			Loop
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("getChargeState") == 1, "FireBouncingCharged")
			Loop
		
		FireShot:
			TNT1 A 0 A_GiveInventory("LoopFlag", 1)
			TNT1 A 0 A_PlaySound("agge/buah", CHAN_WEAPON)
			CFLM E 1 Bright A_SetTics(10 / ACS_NamedExecuteWithResult("getFireRateBoost"))
			CFLM F 1 Bright A_SetTics(10 / ACS_NamedExecuteWithResult("getFireRateBoost"))
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 22), 3) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isEffectChanceSuccessful", 20) == 0, 2)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 180, FALSE, 0, 20)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 31), 21) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 11) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 10) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TwentyTwentyGiver", 1, 4) //OFFSET
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 60, TRUE, -15)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 300, FALSE, 15)
			TNT1 A -1 A_Jump(256, 36) //OFFSET
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 60, TRUE, -25)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 60, FALSE, -5)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 300, FALSE, 25)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 300, FALSE, 5)
			TNT1 A -1 A_Jump(256, 31) //OFFSET
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 60, TRUE, -15)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 300, FALSE, 15)
			CFLM E 2 Bright
			CFLM F 2 Bright
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 60, FALSE, -1)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 60, FALSE, -30)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 300, FALSE, 30)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 300, FALSE, 1)
			TNT1 A -1 A_Jump(256, 22) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 15), 6) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 6) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 13) //OFFSET
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 0, TRUE, -10)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 0, FALSE, 10)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 16) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 29), 8) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 8) //OFFSET
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile")
			CFLM E 2 Bright
			CFLM F 2 Bright
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 0, FALSE, 15)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 0, FALSE, -15)
			TNT1 A -1 A_Jump(256, 8) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 8) //OFFSET
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 0, TRUE, -10)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 0, FALSE, 10)
			CFLM E 2 Bright
			CFLM F 2 Bright
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 0, FALSE, -20)
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile", 0, FALSE, 20)
			TNT1 A 0 A_JumpIfInventory("LoopFlag", 1, "FireEnd")
			Loop
			TNT1 A 0 A_FireCustomMissile("NormalTearProjectile")
			TNT1 A 0 A_JumpIfInventory("LoopFlag", 1, "FireEnd")
			Loop
			
		FireBouncingShot:
			TNT1 A 0 A_GiveInventory("LoopFlag", 1)
			TNT1 A 0 A_PlaySound("agge/buah", CHAN_WEAPON)
			CFLM E 1 Bright A_SetTics(10 / ACS_NamedExecuteWithResult("getFireRateBoost"))
			CFLM F 1 Bright A_SetTics(10 / ACS_NamedExecuteWithResult("getFireRateBoost"))
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 22), 3) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isEffectChanceSuccessful", 20) == 0, 2)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 180, FALSE, 0, 20)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 31), 21) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 11) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 10) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TwentyTwentyGiver", 1, 4) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 60, TRUE, -15)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 300, FALSE, 15)
			TNT1 A -1 A_Jump(256, 36) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 60, TRUE, -25)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 60, FALSE, -5)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 300, FALSE, 25)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 300, FALSE, 5)
			TNT1 A -1 A_Jump(256, 31) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 60, TRUE, -15)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 300, FALSE, 15)
			CFLM E 2 Bright
			CFLM F 2 Bright
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 60, FALSE, -1)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 60, FALSE, -30)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 300, FALSE, 30)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 300, FALSE, 1)
			TNT1 A -1 A_Jump(256, 22) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 15), 6) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 6) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 13) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 0, TRUE, -10)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 0, FALSE, 10)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 16) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 29), 8) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 8) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile")
			CFLM E 2 Bright
			CFLM F 2 Bright
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 0, FALSE, 15)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 0, FALSE, -15)
			TNT1 A -1 A_Jump(256, 8) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 8) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 0, TRUE, -10)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 0, FALSE, 10)
			CFLM E 2 Bright
			CFLM F 2 Bright
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 0, FALSE, -20)
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile", 0, FALSE, 20)
			TNT1 A 0 A_JumpIfInventory("LoopFlag", 1, "FireEnd")
			Loop
			TNT1 A 0 A_FireCustomMissile("BouncingTearProjectile")
			TNT1 A 0 A_JumpIfInventory("LoopFlag", 1, "FireEnd")
			Loop
			
		FireCharged:
			TNT1 A 0 A_PlaySound("agge/chargedatkml", CHAN_WEAPON)
			CFLR E 2 Bright
			CFLR F 2 Bright
			// The Wiz cambiar√≠a completamente el disparo... soon te-eme
			//TNT1 A 0 A_JumpIfInventory("TheWizGiver", 1, 4) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 15), 18) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 4) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 4) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 6) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 29), 9) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 3) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 3) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0
			Goto FireChargedEnd
			
		FireBouncingCharged:
			TNT1 A 0 A_PlaySound("agge/chargedatkml", CHAN_WEAPON)
			CFLR E 2 Bright
			CFLR F 2 Bright
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 15), 18) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 4) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 4) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 6) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 29), 9) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 3) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 3) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0
			Goto FireChargedEnd
			
		FireChargedEnd:
			CFLR F 5 Bright
			CFLR E 5 Bright
			CFLR G 3
			CFLR G 3 Offset (0, 40)
			CFLR G 1 A_Refire
			Goto Ready
		 
		FireEnd:
			TNT1 A 0 A_TakeInventory("LoopFlag", 70)
			CFLM F 4 Bright
			CFLM E 4 Bright
			CFLM G 1
			CFLM G 1 Offset (0, 40)
			CFLM G 1 A_Refire
			Goto Ready

		Flash:
			TNT1 A 2 A_Light1
			TNT1 A 2 A_Light2
			TNT1 A 1 A_Light1
			TNT1 A 1 A_Light0
			Stop
  }
}

ACTOR BlackIsaacHands : IsaacHands {
	
	States {
		ReadyLoop:
			TNT1 A 0 A_JumpIfInventory("MonstrosLungGiver", 1, "MLReadyLoop")
		  CFLB AAAABBBBCCCC 1 A_WeaponReady
		  Loop
			
		DeselectLoop:
			TNT1 A 0 A_JumpIfInventory("MonstrosLungGiver", 1, 2)
		  CFLB A 1 A_Lower
		  Loop
			CFLR A 1 A_Lower
		  Loop

		Select:
			TNT1 A 0 A_JumpIfInventory("MonstrosLungGiver", 1, 2)
		  CFLB A 1 A_Raise
		  Loop
			CFLR A 1 A_Raise
		  Loop
			
		Fire:
			TNT1 A 0 A_JumpIfInventory("MonstrosLungGiver", 1, "MLFire")
			CFLB A 1 Offset (0, 40)
			CFLB D 2 Offset (0, 50)
			CFLB D 2 Offset (0, 36)
			CFLB E 4 Bright
			TNT1 A 0 A_JumpIfInventory("RubberCementGiver", 1, "FireBouncingShot")
			Goto FireShot
		
		FireShot:
			TNT1 A 0 A_GiveInventory("LoopFlag", 1)
			TNT1 A 0 A_PlaySound("agge/buah", CHAN_WEAPON)
			CFLB E 1 Bright A_SetTics(10 / ACS_NamedExecuteWithResult("getFireRateBoost"))
			CFLB F 1 Bright A_SetTics(10 / ACS_NamedExecuteWithResult("getFireRateBoost"))
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 22), 3) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isEffectChanceSuccessful", 20) == 0, 2)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 180, FALSE, 0, 20)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 31), 21) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 11) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 10) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TwentyTwentyGiver", 1, 4) //OFFSET
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 60, TRUE, -15)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 300, FALSE, 15)
			TNT1 A -1 A_Jump(256, 36) //OFFSET
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 60, TRUE, -25)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 60, FALSE, -5)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 300, FALSE, 25)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 300, FALSE, 5)
			TNT1 A -1 A_Jump(256, 31) //OFFSET
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 60, TRUE, -15)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 300, FALSE, 15)
			CFLB E 2 Bright
			CFLB F 2 Bright
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 60, FALSE, -1)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 60, FALSE, -30)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 300, FALSE, 30)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 300, FALSE, 1)
			TNT1 A -1 A_Jump(256, 22) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 15), 6) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 6) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 13) //OFFSET
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 0, TRUE, -10)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 0, FALSE, 10)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 16) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 29), 8) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 8) //OFFSET
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile")
			CFLB E 2 Bright
			CFLB F 2 Bright
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 0, FALSE, 15)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 0, FALSE, -15)
			TNT1 A -1 A_Jump(256, 8) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 8) //OFFSET
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 0, TRUE, -10)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 0, FALSE, 10)
			CFLB E 2 Bright
			CFLB F 2 Bright
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 0, FALSE, -20)
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile", 0, FALSE, 20)
			TNT1 A 0 A_JumpIfInventory("LoopFlag", 1, "FireEnd")
			Loop
			TNT1 A 0 A_FireCustomMissile("FearTearProjectile")
			TNT1 A 0 A_JumpIfInventory("LoopFlag", 1, "FireEnd")
			Loop
			
		FireBouncingShot:
			TNT1 A 0 A_GiveInventory("LoopFlag", 1)
			TNT1 A 0 A_PlaySound("agge/buah", CHAN_WEAPON)
			CFLB E 1 Bright A_SetTics(10 / ACS_NamedExecuteWithResult("getFireRateBoost"))
			CFLB F 1 Bright A_SetTics(10 / ACS_NamedExecuteWithResult("getFireRateBoost"))
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 22), 3) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isEffectChanceSuccessful", 20) == 0, 2)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 180, FALSE, 0, 20)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 31), 21) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 11) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 10) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TwentyTwentyGiver", 1, 4) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 60, TRUE, -15)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 300, FALSE, 15)
			TNT1 A -1 A_Jump(256, 36) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 60, TRUE, -25)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 60, FALSE, -5)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 300, FALSE, 25)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 300, FALSE, 5)
			TNT1 A -1 A_Jump(256, 31) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 60, TRUE, -15)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 300, FALSE, 15)
			CFLB E 2 Bright
			CFLB F 2 Bright
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 60, FALSE, -1)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 60, FALSE, -30)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 300, FALSE, 30)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 300, FALSE, 1)
			TNT1 A -1 A_Jump(256, 22) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 15), 6) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 6) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 13) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 0, TRUE, -10)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 0, FALSE, 10)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 16) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 29), 8) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 8) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile")
			CFLB E 2 Bright
			CFLB F 2 Bright
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 0, FALSE, 15)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 0, FALSE, -15)
			TNT1 A -1 A_Jump(256, 8) //OFFSET
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 8) //OFFSET
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 0, TRUE, -10)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 0, FALSE, 10)
			CFLB E 2 Bright
			CFLB F 2 Bright
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 0, FALSE, -20)
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile", 0, FALSE, 20)
			TNT1 A 0 A_JumpIfInventory("LoopFlag", 1, "FireEnd")
			Loop
			TNT1 A 0 A_FireCustomMissile("BouncingFearTearProjectile")
			TNT1 A 0 A_JumpIfInventory("LoopFlag", 1, "FireEnd")
			Loop
			
		FireCharged:
			TNT1 A 0 A_PlaySound("agge/chargedatkml", CHAN_WEAPON)
			CFLR E 2 Bright
			CFLR F 2 Bright
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 15), 18) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 4) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 4) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 6) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 29), 9) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 3) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 3) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0
			Goto FireChargedEnd
			
		FireBouncingCharged:
			TNT1 A 0 A_PlaySound("agge/chargedatkml", CHAN_WEAPON)
			CFLR E 2 Bright
			CFLR F 2 Bright
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), TRUE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 15), 18) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, 4) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 4) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 6) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 29), 9) //OFFSET
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, 3) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(23, 45), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(315, 337), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 3) //OFFSET
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(338, 359), FALSE, 0, 0, 0, random(0, 60))
			TNT1 A 0 A_FireCustomMissile("MonstroBouncingFearTearProjectile", random(0, 22), FALSE, 0, 0, 0, random(0, 60))
			Goto FireChargedEnd
			TNT1 A 0
			Goto FireChargedEnd
		 
		FireEnd:
			TNT1 A 0 A_TakeInventory("LoopFlag", 70)
			CFLB F 4 Bright
			CFLB E 4 Bright
			CFLB G 1
			CFLB G 1 Offset (0, 40)
			CFLB G 1 A_Refire
			Goto Ready
	}
}

ACTOR BrimstoneHands : IsaacHands {
	Weapon.AmmoUse 10
	
	States {
	
		ReadyLoop:
		  CLID ABCDDCBA 4 A_WeaponReady
		  Loop

		DeselectLoop:
		  CLID A 1 A_Lower
		  Loop

		Select:
		  CLID A 1 A_Raise
		  Loop
			
		Fire:
			TNT1 A 0 A_Refire("Hold")
			TNT1 A -1 A_Jump(256, "Ready")
		  Wait
			
		Hold:
			TNT1 A 0 ACS_NamedExecuteWithResult("loadChargedAttack", ACS_NamedExecuteWithResult("getChargedAttackTime"))
			Goto HoldLoop
			
		HoldLoop:
			GRSL A 1
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("getChargeState") == 2, "Ready")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("getChargeState") == 1, "FireCharged")
			Loop
			
		FireCharged:
			TNT1 A 0 A_PlaySound("agge/brimroar", CHAN_WEAPON)
			GRSL B 2
			GRSL C 2
			TNT1 A 0 A_PlaySound("agge/brimlaser", CHAN_AUTO)
			TNT1 A 0 A_GiveInventory("LoopFlag", 1)
			TNT1 A 0 A_FireCustomMissile("BrimstoneBeam", 0, TRUE, 0, 0, 0)
			TNT1 A 0 A_RailAttack(ACS_NamedExecuteWithResult("getBrimstoneDamage"), 0, 0, None, None, RGF_SILENT, 0, None, 0, 0, 0, 0, 1.0, 1.0, None, 0)
			Goto FireLoop
			
		FireLoop:
			TNT1 A 0 A_Quake(4,12,0,200)
			TNT1 A 0 A_Quake(2,12,0,400)
			TNT1 A 0 A_GiveInventory("LoopFlag", 1)
			GRSL D 1 A_GunFlash("FlashLoop")
			TNT1 A 0 A_FireCustomMissile("BrimstoneBeam", 0, FALSE, 0, 0, 0)
			TNT1 A 0 A_RailAttack(ACS_NamedExecuteWithResult("getBrimstoneDamage"), 0, 0, None, None, RGF_SILENT, 0, None, 0, 0, 0, 0, 1.0, 1.0, None, 0)
			TNT1 A 0 A_JumpIfInventory("LoopFlag", 0, "FireEnd")
			Loop
			
		FireEnd:
			TNT1 A 0 A_TakeInventory("LoopFlag", 70)
			TNT1 A 0 A_GunFlash("Flash")
			GRSL D 4
			TNT1 A 0 A_Refire
			Goto Ready
			
		Flash:
			TNT1 A 1 A_Light (10)
			TNT1 A 1 A_Light (20)
			TNT1 A 1 A_Light (10)
			TNT1 A 0 A_Light0
			Goto LightDone
		
		FlashLoop:
			TNT1 AA 1 A_Light (random(5,10))
			TNT1 A 0 A_Light0
			Goto LightDone
			
	}
}

ACTOR NormalTearProjectile {
  Radius 3
  Height 5
  Damage 2
	Gravity 1.0
	Speed 3.0
	Health 1
	Species "Player" // Para que las lagrimas shielded no colisionen entre ellas
	Projectile
	var int user_deadflag;
	var int user_petrifying_flag;
	var int user_poison_flag;
	var int user_vel_x;
	var int user_vel_y;
	var int user_vel_z;
	var int user_spawn_tid;
	var int user_bone_spawn_angle;
	var int user_remaining_range;
	var int user_seeker_threshold;
	var int user_seeker_maxturnangle;

	+BRIGHT
	+HITTRACER
	+MTHRUSPECIES
	
  States {
	
	  Spawn:
			// Esperar a que exista A_SetSize en zandromierda para height y radius
			TNT1 A 0 NoDelay ACS_NamedExecuteWithResult("setTearStats")
			TNT1 A 0 A_SetUserVar("user_deadflag", 0)
			TNT1 A 0 A_SetUserVar("user_petrifying_flag", 0)
			TNT1 A 0 A_SetUserVar("user_poison_flag", 0)
			TNT1 A 0 A_SetUserVar("user_vel_x", velx)
			TNT1 A 0 A_SetUserVar("user_vel_y", vely)
			TNT1 A 0 A_SetUserVar("user_vel_z", velz)
			TNT1 A 0 A_SetUserVar("user_seeker_threshold", 5)
			TNT1 A 0 A_SetUserVar("user_seeker_maxturnangle", 8)
			TNT1 A 0 A_TakeInventory("WeaponSpecialAction", 1, 0, AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("SacredHeartGiver", 1, "SpawnHomingTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("SpoonBenderGiver", 1, "SpawnHomingTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("LostContactGiver", 1, "SpawnShieldedTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("MomsContactsGiver", 1, "SpawnPetrifyingTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("TheCommonColdGiver", 1, "SpawnPoisonTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "SpawnLoopBoneTear", AAPTR_TARGET)
			TNT1 A -1 A_Jump(256, "SpawnLoop") //La forma que tiene decorate de resolver por herencia
			Wait
			
		SpawnHomingTear:
			TNT1 A 0 A_ChangeFlag("SEEKERMISSILE", TRUE)
			TNT1 A 0 A_JumpIfInventory("LostContactGiver", 1, "SpawnShieldedTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("MomsContactsGiver", 1, "SpawnPetrifyingTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("TheCommonColdGiver", 1, "SpawnPoisonTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "SpawnLoopBoneTear", AAPTR_TARGET)
			TNT1 A -1 A_Jump(256, "SpawnLoop")
			Wait
			
		SpawnShieldedTear:
			TNT1 A 0 A_ChangeFlag("SHOOTABLE", TRUE)
			TNT1 A 0 A_ChangeFlag("NOBLOCKMAP", FALSE)
			TNT1 A 0 A_JumpIfInventory("MomsContactsGiver", 1, "SpawnPetrifyingTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("TheCommonColdGiver", 1, "SpawnPoisonTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "SpawnLoopBoneTear", AAPTR_TARGET)
			TNT1 A -1 A_Jump(256, "SpawnLoop")
			Wait
			
		SpawnPetrifyingTear:
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isEffectChanceSuccessful", 5), 5) //OFFSET
			TNT1 A 0 A_JumpIfInventory("TheCommonColdGiver", 1, "SpawnPoisonTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "SpawnLoopBoneTear", AAPTR_TARGET)
			TNT1 A -1 A_Jump(256, "SpawnLoop")
			Wait
			TNT1 A 0 ACS_NamedExecuteWithResult("showTranslation", 6)
			TNT1 A 0 A_SetUserVar("user_petrifying_flag", 1)
			TNT1 A 0 A_JumpIfInventory("TheCommonColdGiver", 1, "SpawnPoisonTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "SpawnLoopBoneTear", AAPTR_TARGET)
			TNT1 A -1 A_Jump(256, "SpawnLoop")
			Wait
			
		SpawnPoisonTear:
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isEffectChanceSuccessful", 5) == 0, 3) //OFFSET
			TNT1 A 0 ACS_NamedExecuteWithResult("showTranslation", 11)
			TNT1 A 0 A_SetUserVar("user_poison_flag", 1)
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "SpawnLoopBoneTear", AAPTR_TARGET)
			TNT1 A -1 A_Jump(256, "SpawnLoop")
			Wait
			
		SpawnLoop:
			TNT1 A 0 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			TBFI M 5 
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			TNT1 A 0
			Loop
			
		SpawnLoopNailTear:
			TNT1 A 0 A_JumpIfInventory("BloodOfTheMartyrGiver", 1, 5, AAPTR_TARGET) // OFFSET
			TNT1 A 0 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			8INA A 5
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			TNT1 A 0
			Loop
			TNT1 A 0 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			8INB A 5
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			TNT1 A 0
			Loop
			
		SpawnLoopBoneTear:
			TNT1 A 0 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			TBAB ABAB 2
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			TNT1 A 0
			Loop
			
		SpawnLoopScytheTear:
			TNT1 A 0 A_ChangeFlag("THRUACTORS", TRUE)
			TNT1 A 0 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			SCHT ABCDE 1 FAST
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("PiercingDamageDealer", 0, 0, 0, velx, vely, velz, 0, SXF_NOCHECKPOSITION, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setDamageToChildren", user_spawn_tid)
			TNT1 A 0 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			SCHT FGHIJ 1 FAST
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("PiercingDamageDealer", 0, 0, 0, velx, vely, velz, 0, SXF_NOCHECKPOSITION, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setDamageToChildren", user_spawn_tid)
			Loop
			
		ReturnToPlayer:
			TNT1 A 0 ACS_NamedExecuteWithResult("setTracerToPlayer")
			TNT1 A 0 A_SetUserVar("user_seeker_threshold", 50)
			TNT1 A 0 A_SetUserVar("user_seeker_maxturnangle", 60)
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "SpawnLoopBoneTear", AAPTR_TARGET)
			TNT1 A -1 A_Jump(256, "SpawnLoop")
			Wait
			
		XDeath:
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 24) && ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 34), 2) // OFFSET
			TNT1 A 0 A_GiveInventory("KnockBackDebuff", 1, AAPTR_TRACER)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 34), 3) // OFFSET
			TNT1 A 0 A_PlaySound("agge/nailhit",CHAN_AUTO)
			TNT1 A 0 A_SpawnItemEx("BloodSplatter")
			TNT1 A 0 A_JumpIf(user_petrifying_flag==0, 2) //OFFSET
			TNT1 A 0 A_GiveInventory("PetrifyingDebuff", 1, AAPTR_TRACER)
			TNT1 A 0 A_JumpIf(user_poison_flag==0, 4) //OFFSET
			TNT1 A 0 A_JumpIfInventory("PoisonDebuffGiver", 3, 3, AAPTR_TRACER)
			TNT1 A 0 A_GiveInventory("PoisonDebuffGiver", 1, AAPTR_TRACER)
			TNT1 A 0 ACS_NamedExecuteWithResult("applyEffect", 5, 140)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 19), 2) // OFFSET
			TNT1 A 0 A_GiveInventory("InfestationDebuff", 1, AAPTR_TRACER)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 32), "Death")
			TNT1 A 0 A_JumpIfInventory("BleedingDebuffGiver", 1, "Death", AAPTR_TRACER)
			TNT1 A 0 A_GiveInventory("BleedingDebuffGiver", 1, AAPTR_TRACER)
			TNT1 A 0 ACS_NamedExecuteWithResult("checkForBackstabDebuff")
			TNT1 A -1 A_Jump(256, "Death")
			Wait
			
		Death:
			TNT1 A 0 A_SetUserVar("user_deadflag", 1)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "DeathBoneTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIf(Z <= FloorZ+5, "DeathEnd") //Si toca el piso
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 30), "DeathEnd")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isDamageTooLow", 2), "DeathEnd")
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x + cos(Angle+90)*4, user_vel_y + sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x - cos(Angle+90)*4, user_vel_y - sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathEnd
		
		DeathEnd:
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "DeathScytheTearEnd", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "DeathNailTearEnd", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "DeathBoneTearEnd", AAPTR_TARGET)
			TDFI A 0 A_PlaySound("agge/lagrima",CHAN_AUTO)
			TDFI A 1
			TDFI ABC 2
			TDFI D 2
			TDFI E 1
			TDFI F 2
			TDFI G 1
			TDFI H 2
			TDFI I 1
			TDFI J 2
			TDFI K 1
			TDFI L 2
			TDFI M 1
			TDFI N 2
			Stop
			
		DeathBoneTear:
			TNT1 A 0 A_JumpIf(Z <= FloorZ+5, "DeathBoneTearEnd")
			TNT1 A 0 A_JumpIfInventory("TheParasiteGiver", 1, "DeathParasiteBoneTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isParasiteProjectile"), "DeathBoneTearEnd")
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathBoneTearEnd
			
		DeathParasiteBoneTear:
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isDamageTooLow", 2), "DeathBoneTearEnd")
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x + cos(Angle+90)*4, user_vel_y + sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x - cos(Angle+90)*4, user_vel_y - sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathBoneTearEnd
			
		DeathBoneTearEnd:
			TNT1 A 0 A_SpawnItemEx("BoneGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(0, 89), SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION)
			TNT1 A 0 A_SpawnItemEx("BoneGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(90, 179), SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION)
			TNT1 A 0 A_SpawnItemEx("BoneGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(180, 269), SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION)
	    TNT1 A 0 A_SpawnItemEx("BoneGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(270, 359), SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION)
			EIDA A 2 A_PlaySound("agge/bonebreak",CHAN_AUTO)
			EIDA BCDEF 2
			Stop
			
		DeathNailTearEnd:
			TNT1 A 0 A_SpawnItemEx("NailGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(0, 89), SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION)
			TNT1 A 0 A_SpawnItemEx("NailGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(90, 179), SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION)
			TNT1 A 0 A_SpawnItemEx("NailGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(180, 269), SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION)
	    TNT1 A 0 A_SpawnItemEx("NailGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(270, 359), SXF_TRANSFERSCALE|SXF_TRANSFERTRANSLATION)
			8IND A 2 A_PlaySound("agge/nailwall",CHAN_AUTO)
			8IND BCDEF 2
			Stop
			
		DeathScytheTearEnd:
			SCHH A 2 A_PlaySound("agge/scythebreak",CHAN_AUTO)
			SCHH BCDEFGH 2
			Stop
  }
}

ACTOR MonstroTearProjectile : NormalTearProjectile {
	Gravity 0.5

	States {
	
		Spawn:
			TNT1 A 0 NoDelay A_ChangeFlag("NOGRAVITY", FALSE)
			TNT1 A 0 A_SetScale(scalex * frandom(0.9, 1.33))
			Goto Super::Spawn
		
		SpawnLoop:
			TNT1 A 0 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			MLTS A 5 
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			TNT1 A 0
			Loop
			
		DeathEnd:
			TNT1 A 0 ACS_NamedExecuteWithResult("showTranslation", 3)
			Goto Super::DeathEnd
	}
}

ACTOR FearTearProjectile : NormalTearProjectile {
	
  States {
			
		SpawnLoop:
			DMFI A 5 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			DMFI B 5 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			TNT1 A 0
			Loop
			
		SpawnLoopBoneTear:
			TNT1 A 0 ACS_NamedExecuteWithResult("showTranslation", 4)
			Goto Super::SpawnLoopBoneTear
			
		XDeath:
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isEffectChanceSuccessful", 8) == 0, "Super::XDeath")
			TNT1 A 0 A_GiveInventory("FearDebuff", 1, AAPTR_TRACER)
			Goto Super::XDeath
			
		Death:
			TNT1 A 0 A_SetUserVar("user_deadflag", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("showTranslation", 4)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "DeathBoneTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIf(Z <= FloorZ+5, "DeathEnd")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 30), "DeathEnd")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isDamageTooLow", 2), "DeathEnd")
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x + cos(Angle+90)*4, user_vel_y + sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x - cos(Angle+90)*4, user_vel_y - sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathEnd
			
		DeathEnd:
			TNT1 A 0 ACS_NamedExecuteWithResult("showTranslation", 4)
			Goto Super::DeathEnd
			
		DeathBoneTear:
			TNT1 A 0 A_JumpIf(Z <= FloorZ+5, "DeathBoneTearEnd")
			TNT1 A 0 A_JumpIfInventory("TheParasiteGiver", 1, "DeathParasiteBoneTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isParasiteProjectile"), "DeathBoneTearEnd")
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathBoneTearEnd
			
		DeathParasiteBoneTear:
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isDamageTooLow", 2), "DeathBoneTearEnd")
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x + cos(Angle+90)*4, user_vel_y + sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x - cos(Angle+90)*4, user_vel_y - sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathBoneTearEnd
  }
}

ACTOR MonstroFearTearProjectile : FearTearProjectile {
	Gravity 0.5

	States {
	
		Spawn:
			TNT1 A 0 NoDelay A_ChangeFlag("NOGRAVITY", FALSE)
			Goto Super::Spawn
	}
}

ACTOR BouncingTearProjectile : NormalTearProjectile {
	BounceType "Doom"
	
	-BOUNCEONFLOORS
	+BOUNCEONACTORS
	+CANBOUNCEWATER
	+USEBOUNCESTATE
	
	States {
	
		Bounce.Actor.Creature:
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, 3, AAPTR_TARGET) //OFFSET
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			Goto SpawnLoop
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			Goto SpawnLoopBoneTear
	
		Death:
			TNT1 A 0 A_SetUserVar("user_deadflag", 1)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "DeathBoneTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIf(Z <= FloorZ+5, "DeathEnd")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 30), "DeathEnd")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isDamageTooLow", 2), "DeathEnd")
			TNT1 A 0 A_ChangeFlag("BOUNCEONACTORS", FALSE)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x + cos(Angle+90)*4, user_vel_y + sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x - cos(Angle+90)*4, user_vel_y - sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathEnd
			
		DeathBoneTear:
			TNT1 A 0 A_JumpIf(Z <= FloorZ+5, "DeathBoneTearEnd")
			TNT1 A 0 A_JumpIfInventory("TheParasiteGiver", 1, "DeathParasiteBoneTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isParasiteProjectile"), "DeathBoneTearEnd")
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathBoneTearEnd
			
		DeathParasiteBoneTear:
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isDamageTooLow", 2), "DeathBoneTearEnd")
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x + cos(Angle+90)*4, user_vel_y + sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x - cos(Angle+90)*4, user_vel_y - sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathBoneTearEnd
	}
}

ACTOR BouncingFearTearProjectile : FearTearProjectile {
	BounceType "Doom"
	
	-BOUNCEONFLOORS
	+BOUNCEONACTORS
	+CANBOUNCEWATER
	+USEBOUNCESTATE
	
	States {
	
		Bounce.Actor.Creature:
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, 3, AAPTR_TARGET) //OFFSET
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			Goto SpawnLoop
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "SpawnLoopScytheTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "SpawnLoopNailTear", AAPTR_TARGET)
			Goto SpawnLoopBoneTear
	
		Death:
			TNT1 A 0 A_SetUserVar("user_deadflag", 1)
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "DeathBoneTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIf(Z <= FloorZ+5, "DeathEnd")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 30), "DeathEnd")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isDamageTooLow", 2), "DeathEnd")
			TNT1 A 0 A_ChangeFlag("BOUNCEONACTORS", FALSE)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x + cos(Angle+90)*4, user_vel_y + sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x - cos(Angle+90)*4, user_vel_y - sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathEnd
			
		DeathBoneTear:
			TNT1 A 0 A_JumpIf(Z <= FloorZ+5, "DeathBoneTearEnd")
			TNT1 A 0 A_JumpIfInventory("TheParasiteGiver", 1, "DeathParasiteBoneTear", AAPTR_TARGET)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isParasiteProjectile"), "DeathBoneTearEnd")
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathBoneTearEnd
			
		DeathParasiteBoneTear:
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("isDamageTooLow", 2), "DeathBoneTearEnd")
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x + cos(Angle+90)*4, user_vel_y + sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, user_vel_x - cos(Angle+90)*4, user_vel_y - sin(Angle+90)*4, user_vel_z, 90, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(45, 89))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x + cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y + sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			TNT1 A 0 A_SetUserVar("user_bone_spawn_angle", random(90, 135))
			TNT1 A 0 A_SetUserVar("user_spawn_tid", ACS_NamedExecuteWithResult("getUniqueTID"))
			TNT1 A 0 A_SpawnItemEx("ParasiteBouncingFearTearProjectile", 0, cos(pitch)*-25, sin(pitch)*-25, (user_vel_x - cos(Angle+user_bone_spawn_angle)*4) * -1, (user_vel_y - sin(Angle+user_bone_spawn_angle)*4) * -1, user_vel_z, user_bone_spawn_angle, SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEVELOCITY, 0, user_spawn_tid)
			TNT1 A 0 ACS_NamedExecuteWithResult("setParasiteChildrenStats", user_spawn_tid)
			Goto DeathBoneTearEnd
	}
}

ACTOR MonstroBouncingTearProjectile : BouncingTearProjectile {
	Gravity 0.5

	States {
	
		Spawn:
			TNT1 A 0 NoDelay A_ChangeFlag("NOGRAVITY", FALSE)
			Goto Super::Spawn
		
		SpawnLoop:
			TNT1 A 0 A_SeekerMissile(user_seeker_threshold, user_seeker_maxturnangle, SMF_LOOK|SMF_CURSPEED, 256, 3)
			MLTS A 5 
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 36), 2)
			TNT1 A 0 A_JumpIfInventory("WeaponSpecialAction", 1, "ReturnToPlayer", AAPTR_TARGET)
			TNT1 A 0
			Loop
			
		DeathEnd:
			TNT1 A 0 ACS_NamedExecuteWithResult("showTranslation", 3)
			Goto Super::DeathEnd
	}
}

ACTOR MonstroBouncingFearTearProjectile : BouncingFearTearProjectile {
	Gravity 0.5

	States {
	
		Spawn:
			TNT1 A 0 NoDelay A_ChangeFlag("NOGRAVITY", FALSE)
			Goto Super::Spawn
	}
}

ACTOR BrimstoneBeam : MageWandMissile {
	Health 9999
	Radius 13
	Height 8
	Damage 0
	Speed 200
	DeathSound "weapons/plasmax"
	MissileType "BeamTrail"
	MissileHeight 8
	Scale 0.8
	RenderStyle Add
	Alpha 0.15
	
	+PAINLESS
	
	States {
	
		Spawn:
			BRS1 A 1 NoDelay A_ChangeFlag("PAINLESS", FALSE)
			BRS1 B 1 A_ChangeFlag("PAINLESS", TRUE)
			BRS1 CD 1
			BRS1 ABCD 10
			Loop
			
		Death:
			TNT1 A 0 ACS_NamedExecuteWithResult("setRenderNormal")
			BRD1 A 3
			TNT1 A 0 A_SpawnItemEx("BrimstoneGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(0, 89), SXF_TRANSFERTRANSLATION)
			TNT1 A 0 A_SpawnItemEx("BrimstoneGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(90, 179), SXF_TRANSFERTRANSLATION)
			TNT1 A 0 A_SpawnItemEx("BrimstoneGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(180, 269), SXF_TRANSFERTRANSLATION)
	    TNT1 A 0 A_SpawnItemEx("BrimstoneGib", 0, 0, -10, random(-5, 5), random(-5, 5), 3, random(270, 359), SXF_TRANSFERTRANSLATION)
			BRD1 BCD 3
			Stop
	}
}

ACTOR BeamTrail : MageWandSmoke replaces MageWandSmoke {
	Radius 13
	Height 8
	Scale 0.8
	RenderStyle Add
	Alpha 0.1
	
  States {
		Spawn:
			BRS2 ABCD 2
			Stop
  }
}

ACTOR ParasiteTearProjectile : NormalTearProjectile {
	States {
		Spawn:
			Goto Super::Spawn+1 //OFFSET
			
		SpawnLoopBoneTear:
			TBAA A 2 A_SeekerMissile(5, 8, SMF_LOOK|SMF_CURSPEED, 256, 3)
			TBAA BAB 2
			Loop
	}
}

ACTOR ParasiteFearTearProjectile : FearTearProjectile {
	States {
		Spawn:
			Goto Super::Spawn+1 //OFFSET
			
			SpawnLoopBoneTear:
			TBAA A 2 A_SeekerMissile(5, 8, SMF_LOOK|SMF_CURSPEED, 256, 3)
			TBAA BAB 2
			Loop
	}
}

ACTOR ParasiteBouncingTearProjectile : BouncingTearProjectile {
	-BOUNCEONACTORS

	States {
		Spawn:
			Goto Super::Spawn+1 //OFFSET
			
		SpawnLoopBoneTear:
			TBAA A 2 A_SeekerMissile(5, 8, SMF_LOOK|SMF_CURSPEED, 256, 3)
			TBAA BAB 2
			Loop
	}
}

ACTOR ParasiteBouncingFearTearProjectile : BouncingFearTearProjectile {
	-BOUNCEONACTORS
	
	States {
		Spawn:
			Goto Super::Spawn+1 //OFFSET
			
		SpawnLoopBoneTear:
			TBAA A 2 A_SeekerMissile(5, 8, SMF_LOOK|SMF_CURSPEED, 256, 3)
			TBAA BAB 2
			Loop
	}
}

ACTOR AbstractGib {
	+BRIGHT
	
	States {
		Spawn:
			TNT1 A -1 NoDelay A_Jump(256, "Gib1", "Gib2", "Gib3", "Gib4", "Gib5")
			Wait
	}
}

ACTOR BoneGib : AbstractGib {

	States {
			
		Gib1:
			TBGA A 70
			Stop
		
		Gib2:
			TBGA B 70
			Stop
			
		Gib3:
			TBGA C 70
			Stop
			
		Gib4:
			TBGA D 70
			Stop
			
		Gib5:
			TBGA E 70
			Stop
	}
}

ACTOR NailGib : AbstractGib {

	States {
			
		Gib1:
			8ING A 70
			Stop
		
		Gib2:
			8ING B 70
			Stop
			
		Gib3:
			8ING C 70
			Stop
			
		Gib4:
			8ING D 70
			Stop
			
		Gib5:
			8ING E 70
			Stop
	}
}

ACTOR BrimstoneGib : AbstractGib {

	States {
			
		Gib1:
			BRGA A 70
			Stop
		
		Gib2:
			BRGA B 70
			Stop
			
		Gib3:
			BRGA C 70
			Stop
			
		Gib4:
			BRGA D 70
			Stop
			
		Gib5:
			BRGA A 70
			Stop
	}
}

ACTOR PiercingDamageDealer {
	Radius 3
  Height 5
	Projectile
	Species "Player"
	var int user_master_damage;
	var int user_petrifying_flag;
	var int user_poison_flag;
	
	+HITTRACER
	+MTHRUSPECIES
	-NOBLOCKMAP
	
	States {
	
		Spawn:
			TNT1 A 5
			Stop
	
		XDeath:
			// IMPORTANTE: Tiene que seguir haciendo los checks de los otros efectos
			TNT1 A 0 A_SpawnItemEx("BloodSplatter")
			TNT1 A 0 ACS_NamedExecuteWithResult("dealPiercingDamage")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 24) && ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 34), 2) // OFFSET
			TNT1 A 0 A_GiveInventory("KnockBackDebuff", 1, AAPTR_TRACER)
			TNT1 A 0 A_JumpIf(user_petrifying_flag==0, 2) //OFFSET
			TNT1 A 0 A_GiveInventory("PetrifyingDebuff", 1, AAPTR_TRACER)
			TNT1 A 0 A_JumpIf(user_poison_flag==0, 4) //OFFSET
			TNT1 A 0 A_JumpIfInventory("PoisonDebuffGiver", 3, 3, AAPTR_TRACER)
			TNT1 A 0 A_GiveInventory("PoisonDebuffGiver", 1, AAPTR_TRACER)
			TNT1 A 0 ACS_NamedExecuteWithResult("applyEffect", 5, 140)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 19), 2) // OFFSET
			TNT1 A 0 A_GiveInventory("InfestationDebuff", 1, AAPTR_TRACER)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInTargetInventory", 32), 4) // OFFSET
			TNT1 A 0 A_JumpIfInventory("BleedingDebuffGiver", 1, 3, AAPTR_TRACER) // OFFSET
			TNT1 A 0 A_GiveInventory("BleedingDebuffGiver", 1, AAPTR_TRACER)
			TNT1 A 0 ACS_NamedExecuteWithResult("checkForBackstabDebuff")
			TNT1 A 0
			Stop
	}
}

ACTOR LoopFlag : Inventory {
	-INVBAR
  +UNDROPPABLE
  Inventory.MaxAmount 70
  Inventory.Icon TNT1A0
}

ACTOR PiercingDamageFlag : Inventory { Inventory.MaxAmount 1 Inventory.Amount 1 }