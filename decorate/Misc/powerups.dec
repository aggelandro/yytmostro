//=================
// Isaac Power Ups
//=================

/* Superclase de los powerups de isaac que se auto-activan una vez los agarra el doomguy.
// La idea es que solo se puedan activar una sola vez (2 veces como mucho).
// Condiciones para pickear:
//	+ Ser clase Agge
//	+ Tener el Arma 4 en el inventario
//  + Condiciones extras de cada powerup especifico
*/
ACTOR AbstractAutoCustomPowerUp : CustomInventory {
	Inventory.MaxAmount 1
	Inventory.InterHubAmount 1
	Inventory.PickupSound "agge/powerup"
	Inventory.RestrictedTo "Agge" 
	
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.UNDROPPABLE
	+INVENTORY.HUBPOWER
	+INVENTORY.NEVERRESPAWN
	+FLOATBOB
	+COUNTITEM
	+BRIGHT
	
	States {
		Pickup:
		  TNT1 A 0 A_JumpIfInventory("IsaacHands", 1, "WeaponInInventory")
			TNT1 A 0 A_JumpIfInventory("BlackIsaacHands", 1, "WeaponInInventory")
			TNT1 A 0 A_JumpIfInventory("OrangeIsaacHands", 1, "WeaponInInventory")
			TNT1 A 0 A_JumpIfInventory("GreenIsaacHands", 1, "WeaponInInventory")
			TNT1 A 0 A_JumpIfInventory("BrimstoneHands", 1, "WeaponInInventory")
			Fail
			
		AlreadyActive:
			TNT1 A 0
			Fail
	}
}

ACTOR Cat-O-Nine-Tails : AbstractAutoCustomPowerUp 4000 {
	Inventory.PickupMessage "Cat-O-Nine-Tails: Shot speed + damage up"
	
	States {
		
		Spawn:
			P000 A 1
			Loop
		
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("CONTGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("CONTGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 2, 2)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 4, 90)
			Stop
	}
}

ACTOR GrowthHormones : AbstractAutoCustomPowerUp 4001 {
	Inventory.PickupMessage "Growth Hormones: Damage Up"
	
	States {
		
		Spawn:
			P001 A 1
			Loop
		
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("GrowthHormonesGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("GrowthHormonesGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 2, 2)
			Stop
	}
}

ACTOR JesusJuice : AbstractAutoCustomPowerUp 4002 {
	Inventory.PickupMessage "Jesus Juice: Damage + Range Up"
	
	States {
		
		Spawn:
			P002 A 1
			Loop
		
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("JesusJuiceGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("JesusJuiceGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 2 , 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 3, 4)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 1, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 0, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 5, 1)
			Stop
	}
}

ACTOR MomsHeels : AbstractAutoCustomPowerUp 4003 {
	Inventory.PickupMessage "Mom's Heels: Range up"
	
	States {
		
		Spawn:
			P003 A 1
			Loop
		
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("MomsHeelsGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("MomsHeelsGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 3, 25)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 1, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 0, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 5, 1)
			Stop
	}
}

ACTOR MomsLipstick : AbstractAutoCustomPowerUp 4004 {
	Inventory.PickupMessage "Mom's Lipstick: Range up"
	
	States {
		
		Spawn:
			P004 A 1
			Loop
		
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("MomsLipstickGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("MomsLipstickGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 3, 25)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 1, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 0, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 5, 1)
			Stop
	}
}

ACTOR MomsUnderwear : AbstractAutoCustomPowerUp 4005 {
	Inventory.PickupMessage "Mom's Underwear: Range up"
	
	States {
		
		Spawn:
			P005 A 1
			Loop
		
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("MomsUnderwearGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("MomsUnderwearGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 3, 25)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 1, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 0, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 5, 1)
			Stop
	}
}

ACTOR RoidRage : AbstractAutoCustomPowerUp 4006 {
	Inventory.PickupMessage "Roid Rage: Speed and range up"
	
	States {
		
		Spawn:
			P006 A 1
			Loop
		
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("RoidRageGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("RoidRageGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 3, 10)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 1, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 0, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 5, 1)
			Stop
	}
}

ACTOR SafetyPin : AbstractAutoCustomPowerUp 4007 {
	Inventory.PickupMessage "Safety Pin: Evil + range + shot speed up"
	
	States {
		
		Spawn:
			P007 A 1
			Loop
		
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("SafetyPinGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("SafetyPinGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 3, 25)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 1, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 0, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 5, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 4, 75)
			Stop
	}
}

ACTOR Synthoil : AbstractAutoCustomPowerUp 4008 {
	Inventory.PickupMessage "Synthoil: DMG + range up"
	
	States {
		
		Spawn:
			P008 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("SynthoilGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("SynthoilGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 2, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 3, 25)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 1, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 0, 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 5, 1)
			Stop
	}
}

ACTOR SpeedBall : AbstractAutoCustomPowerUp 4009 {
	Inventory.PickupMessage "Speed Ball: Speed + shot speed up"
	
	States {
		
		Spawn:
			P009 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("SpeedBallGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("SpeedBallGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 4, 75)
			Stop
	}
}

ACTOR Magic8Ball : AbstractAutoCustomPowerUp 4010 {
	Inventory.PickupMessage "Magic 8 Ball: Shot speed up"
	
	States {
		
		Spawn:
			P010 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("Magic8BallGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("Magic8BallGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 4, 90)
			Stop
	}
}

ACTOR Screw : AbstractAutoCustomPowerUp 4011 {
	Inventory.PickupMessage "Screw: Tears + shot speed up"
	
	States {
		
		Spawn:
			P011 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("ScrewGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("ScrewGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 4, 90)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 6, 3)
			Stop
	}
}

ACTOR Toothpicks : AbstractAutoCustomPowerUp 4012 {
	Inventory.PickupMessage "Toothpicks: Tears + shot speed up"
	
	States {
		
		Spawn:
			P012 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("ToothpicksGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("ToothpicksGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 4, 75)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 6, 2)
			Stop
	}
}

ACTOR TornPhoto : AbstractAutoCustomPowerUp 4013 {
	Inventory.PickupMessage "Torn Photo: Tears + shot speed up"
	
	States {
		
		Spawn:
			P013 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("TornPhotoGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("TornPhotoGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 4, 75)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 6, 2)
			Stop
	}
}

ACTOR Adrenaline : AbstractAutoCustomPowerUp 4014 {
	Inventory.PickupMessage "Adrenaline: Panic = power"
	
	States {
		
		Spawn:
			P014 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("AdrenalineGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("AdrenalineGiver", 1)
			Stop
	}
}

ACTOR TwentyTwenty : AbstractAutoCustomPowerUp 4015 {
	Inventory.PickupMessage "20/20: Double Shot"
	
	States {
		
		Spawn:
			P015 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("TwentyTwentyGiver", 1, "AlreadyActive")
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 23), 2)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 6, 3)
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("checkForNoGiverInInventory", 29), 2)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 6, 2)
			TNT1 A 0 A_GiveInventory("TwentyTwentyGiver", 1)
			Stop
	}
}

ACTOR ALumpOfCoal : AbstractAutoCustomPowerUp 4016 {
	Inventory.PickupMessage "A Lump of Coal: My Xmas present"
	
	States {
		
		Spawn:
			P016 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("ALumpOfCoalGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("ALumpOfCoalGiver", 1)
			Stop
	}
}

ACTOR BloodOfTheMartyr : AbstractAutoCustomPowerUp 4017 {
	Inventory.PickupMessage "Blood of the Martyr: DMG up"
	
	States {
		
		Spawn:
			P017 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("BloodOfTheMartyrGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("BloodOfTheMartyrGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 2, 2)
			Stop
	}
}

ACTOR DarkMatter : AbstractAutoCustomPowerUp 4018 {
	Inventory.PickupMessage "Dark Matter: DMG up + fear shot"
	
	States {
		
		Spawn:
			P018 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("DarkMatterGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("DarkMatterGiver", 1)
			TNT1 A 0 A_JumpIfInventory("IpecacGiver", 1, 8) //OFFSET
			TNT1 A 0 A_JumpIfInventory("FireMindGiver", 1, 7) //OFFSET
			TNT1 A 0 A_JumpIfInventory("BrimstoneGiver", 1, 6) //OFFSET
			TNT1 A 0 A_TakeInventory("IsaacHands", 1)
			TNT1 A 0 A_GiveInventory("BlackIsaacHands", 1)
			TNT1 A 35
			TNT1 A 0 A_SelectWeapon("BlackIsaacHands")
			TNT1 A 0 ACS_NamedExecuteWithResult("setClientBlackIsaacHands")
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 2, 2)
			Stop
	}
}

ACTOR Infestation2 : AbstractAutoCustomPowerUp 4019 {
	Inventory.PickupMessage "Infestation 2: Infestation shot"
	
	States {
		
		Spawn:
			P019 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("Infestation2Giver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("Infestation2Giver", 1)
			Stop
	}
}

ACTOR LostContact : AbstractAutoCustomPowerUp 4020 {
	Inventory.PickupMessage "Lost Contact: Shielded tears"
	
	States {
		
		Spawn:
			P020 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("LostContactGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("LostContactGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 4, -75)
			Stop
	}
}

ACTOR MomsContacts : AbstractAutoCustomPowerUp 4021 {
	Inventory.PickupMessage "Mom's Contacts: Freeze effect"
	
	States {
		
		Spawn:
			P021 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("MomsContactsGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("MomsContactsGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 3, 4)
			Stop
	}
}

ACTOR MomsEye : AbstractAutoCustomPowerUp 4022 {
	Inventory.PickupMessage "Mom's Eye: Eye in the back of your head"
	
	States {
		
		Spawn:
			P022 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("MomsEyeGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("MomsEyeGiver", 1)
			Stop
	}
}

ACTOR MutantSpider : AbstractAutoCustomPowerUp 4023 {
	Inventory.PickupMessage "Mutant Spider: Quad shot"
	
	States {
		
		Spawn:
			P023 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("MutantSpiderGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("MutantSpiderGiver", 1)
			TNT1 A 0 A_JumpIfInventory("TwentyTwentyGiver", 1, 2)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 6, -3)
			TNT1 A 0
			Stop
	}
}

ACTOR Pisces : AbstractAutoCustomPowerUp 4024 {
	Inventory.PickupMessage "Pisces: Tears up + knock-back shots"
	
	States {
		
		Spawn:
			P024 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("PiscesGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("PiscesGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 6, 3)
			Stop
	}
}

ACTOR TheCommonCold : AbstractAutoCustomPowerUp 4028 {
	Inventory.PickupMessage "The Common Cold: Poison damage"
	
	States {
		
		Spawn:
			P028 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("TheCommonColdGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("TheCommonColdGiver", 1)
			Stop
	}
}

ACTOR TheInnerEye : AbstractAutoCustomPowerUp 4029 {
	Inventory.PickupMessage "The Inner Eye: Triple shot"
	
	States {
		
		Spawn:
			P029 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("TheInnerEyeGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("TheInnerEyeGiver", 1)
			TNT1 A 0 A_JumpIfInventory("TwentyTwentyGiver", 1, 2)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 6, -2)
			TNT1 A 0
			Stop
	}
}

ACTOR TheWiz : AbstractAutoCustomPowerUp 4031 {
	Inventory.PickupMessage "The Wiz: Double wiz shot!"
	
	States {
		
		Spawn:
			P031 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("TheWizGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("TheWizGiver", 1)
			Stop
	}
}

ACTOR Backstabber : AbstractAutoCustomPowerUp 4032 {
	Inventory.PickupMessage "Backstabber: Watch your back!"
	
	States {
		
		Spawn:
			P032 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("BackstabberGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("BackstabberGiver", 1)
			Stop
	}
}

ACTOR 8InchNails : AbstractAutoCustomPowerUp 4034 {
	Inventory.PickupMessage "8 Inch Nails: Stick it to 'em!"
	
	States {
		
		Spawn:
			P034 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("8InchNailsGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("8InchNailsGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 2, 3)
			Stop
	}
}

ACTOR DeathsTouch : AbstractAutoCustomPowerUp 4035 {
	Inventory.PickupMessage "Death's Touch: Piercing shots + DMG up"
	
	States {
		
		Spawn:
			P035 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("DeathsTouchGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("DeathsTouchGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 2, 3)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 6, -2)
			Stop
	}
}

ACTOR MyReflection : AbstractAutoCustomPowerUp 4036 {
	Inventory.PickupMessage "My Reflection: Boomerang tears"
	
	States {
		
		Spawn:
			P036 A 1
			Loop
			
		WeaponInInventory:
			TNT1 A 0 A_JumpIfInventory("MyReflectionGiver", 1, "AlreadyActive")
			TNT1 A 0 A_GiveInventory("MyReflectionGiver", 1)
			TNT1 A 0 ACS_NamedExecuteWithResult("addTearBoost", 3, 10)
			Stop
	}
}




//=========
// Givers
//=========

//Nota: Los givers tambien son una forma de controlar el stackeo que puede tener un powerup.
ACTOR AbstractAutoTBOIGiver : Inventory {
  Inventory.Amount 1
  Inventory.MaxAmount 1
}

ACTOR CONTGiver : AbstractAutoTBOIGiver {}
ACTOR GrowthHormonesGiver : AbstractAutoTBOIGiver {}
ACTOR JesusJuiceGiver : AbstractAutoTBOIGiver {}
ACTOR MomsHeelsGiver : AbstractAutoTBOIGiver {}
ACTOR MomsLipstickGiver : AbstractAutoTBOIGiver {}
ACTOR MomsUnderwearGiver : AbstractAutoTBOIGiver {}
ACTOR RoidRageGiver : AbstractAutoTBOIGiver {}
ACTOR SafetyPinGiver : AbstractAutoTBOIGiver {}
ACTOR SynthoilGiver : AbstractAutoTBOIGiver {}
ACTOR SpeedBallGiver : AbstractAutoTBOIGiver {}
ACTOR Magic8BallGiver : AbstractAutoTBOIGiver {}
ACTOR ScrewGiver : AbstractAutoTBOIGiver {}
ACTOR ToothpicksGiver : AbstractAutoTBOIGiver {}
ACTOR TornPhotoGiver : AbstractAutoTBOIGiver {}
ACTOR AdrenalineGiver : AbstractAutoTBOIGiver {}
ACTOR TwentyTwentyGiver : AbstractAutoTBOIGiver {}
ACTOR ALumpOfCoalGiver : AbstractAutoTBOIGiver {}
ACTOR BloodOfTheMartyrGiver : AbstractAutoTBOIGiver {}
ACTOR DarkMatterGiver : AbstractAutoTBOIGiver {}
ACTOR Infestation2Giver : AbstractAutoTBOIGiver {}
ACTOR LostContactGiver : AbstractAutoTBOIGiver {}
ACTOR MomsContactsGiver : AbstractAutoTBOIGiver {}
ACTOR MomsEyeGiver : AbstractAutoTBOIGiver {}
ACTOR MutantSpiderGiver : AbstractAutoTBOIGiver {}
ACTOR PiscesGiver : AbstractAutoTBOIGiver {}
ACTOR TheCommonColdGiver : AbstractAutoTBOIGiver {}
ACTOR TheInnerEyeGiver : AbstractAutoTBOIGiver {}
ACTOR TheWizGiver : AbstractAutoTBOIGiver {}
ACTOR BackstabberGiver : AbstractAutoTBOIGiver {}
ACTOR 8InchNailsGiver : AbstractAutoTBOIGiver {}
ACTOR DeathsTouchGiver : AbstractAutoTBOIGiver {}
ACTOR MyReflectionGiver : AbstractAutoTBOIGiver {}






/* Superclase de los powerups de isaac que se pueden guardar en el inventario y
// se activan cuando el jugador quiera, son más fuertes que los otros pero temporales.
// Condiciones para pickear:
//	+ Ser clase Agge
//	+ Tener el Arma 4 en el inventario
//  + Condiciones extras de cada powerup especifico
*/
ACTOR AbstractTemporalCustomPowerUp : CustomInventory {
	Inventory.Amount 1
	Inventory.MaxAmount 5
	Inventory.InterHubAmount 5
	Inventory.PickupSound "agge/powerup"
	Inventory.RestrictedTo "Agge"
	Scale 0.8
	
	+INVENTORY.UNDROPPABLE
	+INVENTORY.HUBPOWER
	+INVENTORY.INVBAR
	+FLOATBOB
	+BRIGHT
	
	States {
	
		Pickup:
		  TNT1 A 0 A_JumpIfInventory("IsaacHands", 1, "WeaponInInventory")
			TNT1 A 0 A_JumpIfInventory("BlackIsaacHands", 1, "WeaponInInventory")
			TNT1 A 0 A_JumpIfInventory("OrangeIsaacHands", 1, "WeaponInInventory")
			TNT1 A 0 A_JumpIfInventory("GreenIsaacHands", 1, "WeaponInInventory")
			TNT1 A 0 A_JumpIfInventory("BrimstoneHands", 1, "WeaponInInventory")
			Fail
		
		WeaponInInventory:
			TNT1 A 0 A_RailWait
			Stop
			
		Use:
			TNT1 A 0 A_PlaySound("agge/powerupuse", CHAN_ITEM)
			Stop
			
		AlreadyActive:
			TNT1 A 0 A_PlaySound("agge/powerupfail", CHAN_ITEM)
			Fail
	}
}

ACTOR RubberCement : AbstractTemporalCustomPowerUp 4025 {
	Inventory.PickupMessage "Rubber Cement: Bouncing tears"
	Inventory.Icon "P025A0"
	
	States {
		
		Spawn:
			P025 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("RubberCementGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 25)
			Goto Super::Use
	}
}

ACTOR SacredHeart : AbstractTemporalCustomPowerUp 4026 {
	Inventory.PickupMessage "Sacred Heart: Homing shots + DMG up"
	Inventory.Icon "P026A0"
	
	States {
		
		Spawn:
			P026 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("SacredHeartGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 26)
			Goto Super::Use
	}
}

ACTOR SpoonBender : AbstractTemporalCustomPowerUp 4027 {
	Inventory.PickupMessage "Spoon Bender: Homing shots"
	Inventory.Icon "P027A0"
	
	States {
		
		Spawn:
			P027 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("SpoonBenderGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 27)
			Goto Super::Use
	}
}

ACTOR TheParasite : AbstractTemporalCustomPowerUp 4030 {
	Inventory.PickupMessage "The Parasite: Split shot"
	Inventory.Icon "P030A0"
	
	States {
		
		Spawn:
			P030 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("TheParasiteGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 30)
			Goto Super::Use
	}
}

ACTOR CompoundFracture : AbstractTemporalCustomPowerUp 4033 {
	Inventory.PickupMessage "Compound Fracture: Bone tears!"
	Inventory.Icon "P033A0"
	
	States {
		
		Spawn:
			P033 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("CompoundFractureGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 33)
			Goto Super::Use
	}
}

ACTOR MonstrosLung : AbstractTemporalCustomPowerUp 4037 {
	Inventory.PickupMessage "Monstro's Lung: Charged burst attack"
	Inventory.Icon "P037A0"
	
	States {
		
		Spawn:
			P037 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("MonstrosLungGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 37)
			Goto Super::Use
	}
}

ACTOR Brimstone : AbstractTemporalCustomPowerUp 4038 {
	Inventory.PickupMessage "Brimstone: Blood laser barrage"
	Inventory.Icon "P038A0"
	
	States {
		
		Spawn:
			P038 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("BrimstoneGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 38)
			Goto Super::Use
	}
}

ACTOR FireMind : AbstractTemporalCustomPowerUp 4039 {
	Inventory.PickupMessage "Fire Mind: Flaming tears"
	Inventory.Icon "P039A0"
	
	States {
		
		Spawn:
			P039 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("FireMindGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 39)
			Goto Super::Use
	}
}

ACTOR Ipecac : AbstractTemporalCustomPowerUp 4040 {
	Inventory.PickupMessage "Ipecac: Explosive shots"
	Inventory.Icon "P040A0"
	
	States {
		
		Spawn:
			P040 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("IpecacGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 40)
			Goto Super::Use
	}
}

ACTOR Uranus : AbstractTemporalCustomPowerUp 4041 {
	Inventory.PickupMessage "Uranus: Ice tears"
	Inventory.Icon "P041A0"
	
	States {
		
		Spawn:
			P041 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("UranusGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 41)
			Goto Super::Use
	}
}

ACTOR OcularRift : AbstractTemporalCustomPowerUp 4042 {
	Inventory.PickupMessage "Ocular Rift: Stare into the abyss"
	Inventory.Icon "P042A0"
	
	States {
		
		Spawn:
			P042 A 1
			Loop
			
		Use:
			TNT1 A 0 A_JumpIfInventory("OcularRiftGiver", 1, "AlreadyActive")
			TNT1 A 0 ACS_NamedExecuteWithResult("activateTemporalPowerup", 42)
			Goto Super::Use
	}
}




//=========
// Givers
//=========

ACTOR AbstractTemporalTBOIGiver : Inventory {
	Inventory.Amount 1
  Inventory.MaxAmount 1
}

ACTOR RubberCementGiver : AbstractTemporalTBOIGiver {}
ACTOR SacredHeartGiver : AbstractTemporalTBOIGiver {}
ACTOR SpoonBenderGiver : AbstractTemporalTBOIGiver {}
ACTOR TheParasiteGiver : AbstractTemporalTBOIGiver {}
ACTOR CompoundFractureGiver : AbstractTemporalTBOIGiver {}
ACTOR MonstrosLungGiver : AbstractTemporalTBOIGiver {}
ACTOR BrimstoneGiver : AbstractTemporalTBOIGiver {}
ACTOR FireMindGiver : AbstractTemporalTBOIGiver {}
ACTOR IpecacGiver : AbstractTemporalTBOIGiver {}
ACTOR UranusGiver : AbstractTemporalTBOIGiver {}
ACTOR OcularRiftGiver : AbstractTemporalTBOIGiver {}









//=================
// Contra Power Ups
//=================

ACTOR AbstractContraToken : CustomInventory {
	Inventory.MaxAmount 1
	Inventory.InterHubAmount 1
	Inventory.RestrictedTo "Terro"
	Inventory.PickupSound "contra/powerup"
	+INVENTORY.AUTOACTIVATE
	+DONTGIB
	+FLOATBOB
	+COUNTITEM
	
	States {
		Pickup:
			TNT1 A 0 A_JumpIfInventory("ContraWeapon", 1, "Success")
			TNT1 A 0 A_RailWait
			Stop
	}
}

ACTOR SpreadGunToken : AbstractContraToken {
	Inventory.PickupMessage "Weapon token! Spread Shot!"
	
	States {
	
		Spawn:
			CTRP A -1 BRIGHT
			Stop
		
		Success:
			TNT1 A 0 A_TakeInventory("HomingGunGiver", 2)
			TNT1 A 0 A_TakeInventory("PrototypeGunGiver", 2)
			TNT1 A 0 A_TakeInventory("LaserGunGiver", 2)
			TNT1 A 0 A_TakeInventory("FlamethrowerGunGiver", 2)
			TNT1 A 0 A_TakeInventory("CrusherGunGiver", 2)
			TNT1 A 0 A_GiveInventory("SpreadGunGiver", 1)
			TNT1 A 0 A_RailWait
			Stop			
	}
}

ACTOR HomingGunToken : AbstractContraToken {
	Inventory.PickupMessage "Weapon token! Homing Missile!"
	
	States {
	
		Spawn:
			CTRP B -1 BRIGHT
			Stop
			
		Success:
			TNT1 A 0 A_TakeInventory("SpreadGunGiver", 2)
			TNT1 A 0 A_TakeInventory("PrototypeGunGiver", 2)
			TNT1 A 0 A_TakeInventory("LaserGunGiver", 2)
			TNT1 A 0 A_TakeInventory("FlamethrowerGunGiver", 2)
			TNT1 A 0 A_TakeInventory("CrusherGunGiver", 2)
			TNT1 A 0 A_GiveInventory("HomingGunGiver", 1)
			TNT1 A 0 A_RailWait
			Stop
	}
}

ACTOR PrototypeGunToken : AbstractContraToken {
	Inventory.PickupMessage "Weapon token! Prototype Weapon! Let's attack aggresively!"
	
	States {
	
		Spawn:
			CTRP J -1 BRIGHT
			Stop
			
		Success:
			TNT1 A 0 A_TakeInventory("SpreadGunGiver", 2)
			TNT1 A 0 A_TakeInventory("HomingGunGiver", 2)
			TNT1 A 0 A_TakeInventory("LaserGunGiver", 2)
			TNT1 A 0 A_TakeInventory("FlamethrowerGunGiver", 2)
			TNT1 A 0 A_TakeInventory("CrusherGunGiver", 2)
			TNT1 A 0 A_GiveInventory("PrototypeGunGiver", 1)
			TNT1 A 0 A_RailWait
			Stop
	}
}

ACTOR LaserGunToken : AbstractContraToken {
	Inventory.PickupMessage "Weapon token! Laser!"
	
	States {
		Spawn:
			CTRP C -1 BRIGHT
			Stop
			
		Success:
			TNT1 A 0 A_TakeInventory("SpreadGunGiver", 2)
			TNT1 A 0 A_TakeInventory("HomingGunGiver", 2)
			TNT1 A 0 A_TakeInventory("PrototypeGunGiver", 2)
			TNT1 A 0 A_TakeInventory("FlamethrowerGunGiver", 2)
			TNT1 A 0 A_TakeInventory("CrusherGunGiver", 2)
			TNT1 A 0 A_GiveInventory("LaserGunGiver", 1)
			TNT1 A 0 A_RailWait
			Stop
	}
}

ACTOR FlamethrowerGunToken : AbstractContraToken {
	Inventory.PickupMessage "Weapon token! Flamethrower!"
	
	States {
		Spawn:
			CTRP H -1 BRIGHT
			Stop
			
		Success:
			TNT1 A 0 A_TakeInventory("SpreadGunGiver", 2)
			TNT1 A 0 A_TakeInventory("HomingGunGiver", 2)
			TNT1 A 0 A_TakeInventory("PrototypeGunGiver", 2)
			TNT1 A 0 A_TakeInventory("LaserGunGiver", 2)
			TNT1 A 0 A_TakeInventory("CrusherGunGiver", 2)
			TNT1 A 0 A_GiveInventory("FlamethrowerGunGiver", 1)
			TNT1 A 0 A_RailWait
			Stop
	}
}

ACTOR CrusherGunToken : AbstractContraToken {
	Inventory.PickupMessage "Weapon token! Crusher Missile!"
	
	States {
		Spawn:
			CTRP H -1 BRIGHT
			Stop
			
		Success:
			TNT1 A 0 A_TakeInventory("SpreadGunGiver", 2)
			TNT1 A 0 A_TakeInventory("HomingGunGiver", 2)
			TNT1 A 0 A_TakeInventory("PrototypeGunGiver", 2)
			TNT1 A 0 A_TakeInventory("LaserGunGiver", 2)
			TNT1 A 0 A_TakeInventory("FlamethrowerGunGiver", 2)
			TNT1 A 0 A_GiveInventory("CrusherGunGiver", 1)
			TNT1 A 0 A_RailWait
			Stop
	}
}








ACTOR AbstractContraGiver : Inventory {
	Inventory.Amount 1
  Inventory.MaxAmount 2
}

ACTOR SpreadGunGiver : AbstractContraGiver {}
ACTOR HomingGunGiver : AbstractContraGiver {}
ACTOR PrototypeGunGiver : AbstractContraGiver {}
ACTOR LaserGunGiver : AbstractContraGiver {}
ACTOR FlamethrowerGunGiver : AbstractContraGiver {}
ACTOR CrusherGunGiver : AbstractContraGiver {}